/* General styles and reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body, html {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f0f0f0;
  font-family: Arial, sans-serif;
}

.app-container {
  text-align: center;
  width: 80%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

h1 {
  margin-bottom: 20px;
  font-size: 2rem;
  color: #333;
}

.search-box-container {
  margin-bottom: 20px;
  display: flex;
  justify-content: center;
  width: 100%;
}

.search-box {
  width: 60%;
  max-width: 600px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 25px;
  font-size: 1rem;
  outline: none;
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.3s ease;
}

.search-box:focus {
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
}

/* Tree styles */
.tree ul {
  padding-top: 20px;
  position: relative;
  transition: all 0.5s;
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.tree li {
  float: left;
  text-align: center;
  list-style-type: none;
  position: relative;
  padding: 20px 5px 0 5px;
  transition: all 0.5s;
}

/* Add your connector styles for tree branches */
.tree li::before, .tree li::after {
  content: '';
  position: absolute;
  top: 0;
  right: 50%;
  border-top: 1px solid #ccc;
  width: 50%;
  height: 20px;
}

.tree li::after {
  right: auto;
  left: 50%;
  border-left: 1px solid #ccc;
}

.tree li:only-child::after, .tree li:only-child::before {
  display: none;
}

.tree li:only-child {
  padding-top: 0;
}

.tree li:first-child::before, .tree li:last-child::after {
  border: 0 none;
}

.tree li:last-child::before {
  border-right: 1px solid #ccc;
  border-radius: 0 5px 0 0;
  -webkit-border-radius: 0 5px 0 0;
  -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after {
  border-radius: 5px 0 0 0;
  -webkit-border-radius: 5px 0 0 0;
  -moz-border-radius: 5px 0 0 0;
}

.tree ul ul::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  border-left: 1px solid #ccc;
  width: 0;
  height: 20px;
}

/* Node Box Styling */
.node-box {
  background-color: white;
  border-radius: 10px;
  box-shadow: 0px 4px 5px 0px #ddd;
  width: 200px;
  margin: 5px auto;
  transition: all 0.3s ease;
  padding: 20px;
}

.node-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-decoration: none;
}

.node-image {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-bottom: 10px;
}

.node-text {
  text-align: center;
}

.node-name {
  color: black;
  font-size: 14px;
  font-weight: bold;
}

/* Trained Days Box under the main node box */
.trained-days-box {
  background-color: #fff;
  padding: 4px;
  border-radius: 20px;
  margin-top: 10px;
  box-shadow: 0px 3px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: row;
  gap: 15px;
  justify-content: space-evenly;
  align-items: center;
  width: 150px;
  margin: 7px auto;
}

#root {
  width: 100vw;
}

.trained-days-box div {
  display: flex;
  align-items: center; /* Aligns icon and text horizontally */
}

.trained-days-icon {
  margin-right: 5px; /* Adds space between the icon and text */
}

.trained-days-box .trained-days-icon {
  font-size: 16px;
  color: #000;
  margin-right: 8px;
}

.trained-days-box .trained-days-text {
  font-size: 14px;
  color: #333;
}

/* Hover effects */
.node-box:hover {
  background-color: #c8e4f8;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);
  transform: translateY(-3px); /* Small lift on hover */
}

.trained-days-box:hover {
  background-color: #d1ecff;
}

.node-position {
  font-size: 0.9rem;
  color: #666;
}

.node-job-description {
  font-size: 0.9rem;
  color: #666;
}

.child-nodes {
  display: flex;
  gap: 10px;
  max-width: 100%;
  padding: 10px 0;
  z-index: 100;
}

.child-nodes.scrollable {
  overflow-x: auto;
  overflow-y: hidden;
  max-width: 100vw !important;
  width: 100vw !important;
  z-index: 100;
}

.child-nodes li {
  flex: 0 0 auto; /* Ensure child nodes are flex items and not allowed to shrink */
  list-style-type: none;
  width: 200px; /* Set a fixed width for each node to prevent shrinking */
}


